[
  
  {
    "title": "호이스팅",
    "url": "/posts/hoisting/",
    "categories": "Javascript",
    "tags": "writing",
    "date": "2023-11-02 00:00:00 +0900",
    





    
    "snippet": "  자바스크립트 호이스팅에 대해 알아보고자 한다.호이스팅은 무엇인가?  MDN 문서에 따르면, 호이스팅은 인터프리터가 코드를 실행하기 전에 함수, 변수, 클래스 또는 임포트(import)의 선언문을 해당 범위의 맨 위로 이동시키는 과정을 말한다.아래 코드를 예시로 보면console.log(x); // undefinedvar x = 1;console.l...",
    "content": "  자바스크립트 호이스팅에 대해 알아보고자 한다.호이스팅은 무엇인가?  MDN 문서에 따르면, 호이스팅은 인터프리터가 코드를 실행하기 전에 함수, 변수, 클래스 또는 임포트(import)의 선언문을 해당 범위의 맨 위로 이동시키는 과정을 말한다.아래 코드를 예시로 보면console.log(x); // undefinedvar x = 1;console.log(x) 가 실행되는 시점은 변수 x가 선언되기 전이기 때문에 참조 에러가 발생할 것으로 보이지만 실제로는 undefined 가 출력된다.코드를 실행하기 전 선언문을 해당 범위의 맨 위로 이동시키는 과정 이라는 정의를 보았을 때 그 이유는 변수 선언은 코드가 실행되는 시점(런타임)이 아닌 그 이전에 코드의 위로 끌어 올려지기 때문에 변수 선언의 위치에 상관없이 변수를 참조할 수 있다.var, let, const  각 키워드 별 특징은 아래 표와 같다.            키워드      범위      호이스팅      변경 가능 여부      중복 선언 가능 여부                  var      함수 스코프      호이스팅+초기화(undefined)      가능      가능              let      블록 스코프      호이스팅      가능      불가능              const      블록 스코프      호이스팅      불가능      불가능      console.log(x); // ReferenceErrorconsole.log(y); // ReferenceErrorlet x = 1;const y = 2;let 과 const 의 경우 위 코드처럼 선언 이전에 참조하면 참조 에러가 발생해 호이스팅이 일어나지 않는 것과 같이 보이지만 이는 런타임 이전에 선언단계 와 초기화 단계 가 한번에 되는 var 와 달리 let 과 const 의 경우 선언단계 와 초기화 단계 가 분리되어 런타임 이전에 선언단계 가 실행되고 초기화 단계 는 선언문에 도달했을 때 진행되기 때문에 선언 이전에 참조하면 에러가 발생한다.이렇게 스코프의 시작 지점부터 초기화 시작 지점까지 변수를 참조할 수 없는 구간을 일시적 사각지대(Temporal Dead Zone:TDZ) 라고 부른다함수 호이스팅  함수 역시 호이스팅이 일어나지만 함수 선언문 과 함수 표현식 두 방식의 동작은 조금 다르다.함수 선언문 의 경우 런타임 이전에 함수 객체가 먼저 생성되고 자바스크립트 엔진은 함수 이름과 동일한 이름의 식별자를 암묵적으로 생성하고 생성된 객체를 할당한다. 따라서 런타임에는 이미 함수 객체가 생성되어 있고 함수 이름과 동일한 식별자까지 할당이 완료된 상태이기 때문에 함수 선언문 이전에 함수를 참조할 수 있고 호출 역시도 가능하다.함수 표현식 의 경우 함수 리터럴이 변수에 할당되는 형태이기 때문에 함수 호이스팅 이 아닌 변수 호이스팅 이 발생하므로 선언 이전에 호출 시 타입에러가 발생한다.클래스 호이스팅  클래스는 let, const 키워드로 선언한 변수처럼 호이스팅 된다.console.log(Person);// ReferenceError: Cannot access 'Person' before initialization// 클래스 선언문class Person {}  참고: https://developer.mozilla.org/ko/docs/Glossary/Hoisting"
  },
  
  {
    "title": "블로그를 시작한 이유",
    "url": "/posts/first-write/",
    "categories": "일상",
    "tags": "writing",
    "date": "2023-08-07 00:00:00 +0900",
    





    
    "snippet": "  맨날 마음으로만 해야지 해야지 했던 블로그를 드디어 시작하게 되었다. 그래서 첫 글로 내가 왜 블로그를 시작했고, 앞으로 어떤 글을 작성해 나갈지를 간단히 적어보려고 한다.블로그를 시작한 이유퇴사 👋나는 3년 반 정도 다니고 있던 회사에서 곧 퇴사를 앞두고 있는 상황이다.퇴사를 앞두고 있다 보니 자연스레 여유 시간도 생겨서 그동안 생각만 하고 못하...",
    "content": "  맨날 마음으로만 해야지 해야지 했던 블로그를 드디어 시작하게 되었다. 그래서 첫 글로 내가 왜 블로그를 시작했고, 앞으로 어떤 글을 작성해 나갈지를 간단히 적어보려고 한다.블로그를 시작한 이유퇴사 👋나는 3년 반 정도 다니고 있던 회사에서 곧 퇴사를 앞두고 있는 상황이다.퇴사를 앞두고 있다 보니 자연스레 여유 시간도 생겨서 그동안 생각만 하고 못하고 있던 것들을 하나둘씩 해보고 있는데 그중 하나가 바로 블로그 운영해 보는 것이었다.퇴사 후 이직을 해야 하기 때문에 최근 여러 곳 지원을 해보고 있는데, 서류에서도 많이 떨어지고, 면접을 보면서도 부족했던 부분이 많이 느껴져서 당분간은 그런 부분들에 대해 공부를 하고 블로그에도 정리를 해보려고 한다.무엇이든 남겨보자 ✍️개발 블로그라 주 콘텐츠는 그런 내용이 될 거 같지만 틈틈히 요런 일상적인 이야기, 감명 깊게 본 영화나 책에 대한 후기도 적어보고 싶다.개발 관련 포스팅은 어떤 식으로 작성할지 아직 고민이 많다. 보통 공식 문서를 보거나 구글 검색으로 공부를 하게 될 텐데 다른 곳에 이미 있는 내용을 그대로 옮겨와 적는 게 의미가 있을까 생각이 있는데,, 이 부분은 제대로 공부를 해보면서 나만의 정리 방식을 잘 찾아봐야 할 거 같다.나는 어떤 걸 보면 그거에 대해 사람들이랑 얘기해 보는 걸 좋아해서 그런 내용의 포스팅도 해보려고 한다. 보통은 영화나 드라마를 많이 보긴 하지만 최근 다시 독서의 의지가 불타 밀리의 서재도 재 구독을 했다..^^ 얼른 책을 정해서 그 책에 대한 후기도 적어보고 싶다.마무리 👐역시 안 쓰던 글을 적자니 잘 안 나오는 거 같다.. 😅 그래도 시작이 반인만큼 앞으로 꾸준히 포스팅하며 블로그를 운영해 나가보고 싶다!!참고블로그를 구축하는 데는 여기에서 정리를 너무 잘해주셔서 많은 도움이 되었습니다."
  }
  
]

